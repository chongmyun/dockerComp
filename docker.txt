2023.01.20 image & container 정의
// 도커 Dockerfile 빌드
docker build . (. 은 도커파일 경로)

//도커 컨테이너 실행
docker run -p 80:8080 id
* docker run은 이미지를 기반으로 새컨테이너를 시작한다.
* dorder run은 attached-mode 포어그라운드에서 컨테이너 실행 cmd에서 로그를 볼 수 있다.
* -p : 포트 지정 (80:8000) 컨테이너포트 8000번을 80에 노출한다.
  이미지에 EXPOSE port는 선택적인 사항이지만 명시해주는게 모범적인 사례이다
  ID 를 필요로하는 docker의 명령어는 몇개 문자만으로도 사용가능
  예를들어 asdlv39jdlksjv
  docker run asdlv 로 실행가능

//도커 컨테이너 중지
docker stop 이름

//도커 컨테이너 목록
docker ps -a

****매우중요
도커는 캐시에 이미지 레이어와 컨테이너 레이어로 구성되어있다.
하나의 이미지 레이어가 변경되면 (ex> copy) 후속 레이어들도 다시 실행된다

요약
    - 도커는 애플리케이션을 구성하는 코드를 이미지에 집어넣는다. 실행환경 및 패키지를 집어넣는다.
    - 컨테이너는 이미지를 인스터스한다.
    - 도커 빌드시 캐시가 있을경우 캐시를 이용한다 (이미지 레이어와 컨테이너 레이어로 구성)
      하나의 레이어가 변경되면 후속 레이어도 같이 빌드된다.

====================================================================================
// 도커 재시작
docker start 이름 
* docker start는 detached-mode 백그라운드 에서 컨테이너 실행중

//도커 run detached-mode 로 실행
docker run -p 80:8080 -d id
* -d는 detached-mode(백그라운드 실행) 

//실행중인 컨테이너 연결한기
- docker attach 이름
- docker start 이름

//컨테이너 내부 로그에 접근하는법
docker logs 이름

//컨테이너 인터렉티브로 실행
docker run -it id (-i:인터랙티브 상호작용모드 -t: 컨테이너에 터미널 생성)
